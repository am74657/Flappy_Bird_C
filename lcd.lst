


ARM Macro Assembler    Page 1 


    1 00000000         ; LCD.s
    2 00000000         
    3 00000000         ; Student names: change this to your names or look very 
                       silly
    4 00000000         
    5 00000000         ; Last modification date: change this to the last modifi
                       cation date or look very silly
    6 00000000         
    7 00000000         
    8 00000000         
    9 00000000         ; Runs on LM4F120/TM4C123
   10 00000000         
   11 00000000         ; Use SSI0 to send an 8-bit code to the ST7735 160x128 p
                       ixel LCD.
   12 00000000         
   13 00000000         
   14 00000000         
   15 00000000         ; As part of Lab 7, students need to implement these LCD
                       _WriteCommand and LCD_WriteData
   16 00000000         
   17 00000000         ; This driver assumes two low-level LCD functions
   18 00000000         
   19 00000000         
   20 00000000         
   21 00000000         ; Backlight (pin 10) connected to +3.3 V
   22 00000000         
   23 00000000         ; MISO (pin 9) unconnected
   24 00000000         
   25 00000000         ; SCK (pin 8) connected to PA2 (SSI0Clk)
   26 00000000         
   27 00000000         ; MOSI (pin 7) connected to PA5 (SSI0Tx)
   28 00000000         
   29 00000000         ; TFT_CS (pin 6) connected to PA3 (SSI0Fss)
   30 00000000         
   31 00000000         ; CARD_CS (pin 5) unconnected
   32 00000000         
   33 00000000         ; Data/Command (pin 4) connected to PA6 (GPIO)
   34 00000000         
   35 00000000         ; RESET (pin 3) connected to PA7 (GPIO)
   36 00000000         
   37 00000000         ; VCC (pin 2) connected to +3.3 V
   38 00000000         
   39 00000000         ; Gnd (pin 1) connected to ground
   40 00000000         
   41 00000000         ;#define GPIO_PORTA_DATA_R       (*((volatile uint32_t *
                       )0x400043FC))
   42 00000000         
   43 00000000         
   44 00000000         
   45 00000000 40004100 
                       DC      EQU              0x40004100
   46 00000000         
   47 00000000 00000000 
                       DC_COMMAND
                               EQU              0
   48 00000000         
   49 00000000 00000040 
                       DC_DATA EQU              0x40
   50 00000000         



ARM Macro Assembler    Page 2 


   51 00000000 40008008 
                       SSI0_DR_R
                               EQU              0x40008008  ;<- NOTE: The 0 is 
                                                            a zero, not the let
                                                            ter O.
   52 00000000         
   53 00000000 4000800C 
                       SSI0_SR_R
                               EQU              0x4000800C
   54 00000000         
   55 00000000 00000004 
                       SSI_SR_RNE
                               EQU              0x00000004  ; SSI Receive FIFO 
                                                            Not Empty
   56 00000000         
   57 00000000 00000010 
                       SSI_SR_BSY
                               EQU              0x00000010  ; SSI Busy Bit
   58 00000000         
   59 00000000 00000002 
                       SSI_SR_TNF
                               EQU              0x00000002  ; SSI Transmit FIFO
                                                             Not Full
   60 00000000         
   61 00000000         
   62 00000000         
   63 00000000                 EXPORT           writecommand
   64 00000000         
   65 00000000                 EXPORT           writedata
   66 00000000         
   67 00000000         
   68 00000000         
   69 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   70 00000000         
   71 00000000                 THUMB
   72 00000000         
   73 00000000                 ALIGN
   74 00000000         
   75 00000000         
   76 00000000         
   77 00000000         ; The Data/Command pin must be valid when the eighth bit
                        is
   78 00000000         
   79 00000000         ; sent.  The SSI module has hardware input and output FI
                       FOs
   80 00000000         
   81 00000000         ; that are 8 locations deep.  Based on the observation t
                       hat
   82 00000000         
   83 00000000         ; the LCD interface tends to send a few commands and the
                       n a
   84 00000000         
   85 00000000         ; lot of data, the FIFOs are not used when writing
   86 00000000         
   87 00000000         ; commands, and they are used when writing data.  This
   88 00000000         
   89 00000000         ; ensures that the Data/Command pin status matches the b
                       yte



ARM Macro Assembler    Page 3 


   90 00000000         
   91 00000000         ; that is actually being transmitted.
   92 00000000         
   93 00000000         ; The write command operation waits until all data has b
                       een
   94 00000000         
   95 00000000         ; sent, configures the Data/Command pin for commands, se
                       nds
   96 00000000         
   97 00000000         ; the command, and then waits for the transmission to
   98 00000000         
   99 00000000         ; finish.
  100 00000000         
  101 00000000         ; The write data operation waits until there is room in 
                       the
  102 00000000         
  103 00000000         ; transmit FIFO, configures the Data/Command pin for dat
                       a,
  104 00000000         
  105 00000000         ; and then adds the data to the transmit FIFO.
  106 00000000         
  107 00000000         ; NOTE: These functions will crash or stall indefinitely
                        if
  108 00000000         
  109 00000000         ; the SSI0 module is not initialized and enabled.
  110 00000000         
  111 00000000         
  112 00000000         
  113 00000000         ; This is a helper function that sends an 8-bit command 
                       to the LCD.
  114 00000000         
  115 00000000         ; Input: R0  8-bit command to transmit
  116 00000000         
  117 00000000         ; Output: none
  118 00000000         
  119 00000000         ; Assumes: SSI0 and port A have already been initialized
                        and enabled
  120 00000000         
  121 00000000         writecommand
  122 00000000         
  123 00000000         ;; --UUU-- Code to write a command to the LCD
  124 00000000 B403            PUSH             {R0,R1}
  125 00000002         
  126 00000002         
  127 00000002         
  128 00000002         busy
  129 00000002         
  130 00000002 4912            LDR              R1,=SSI0_SR_R ;1) Read SSI0_SR_
                                                            R and check bit 4, 
                                                            
  131 00000004 6808            LDR              R0,[R1]
  132 00000006 F000 0010       AND              R0,#SSI_SR_BSY
  133 0000000A 2800            CMP              R0,#0
  134 0000000C         
  135 0000000C         
  136 0000000C         
  137 0000000C D1F9            BNE              busy        ;2) If bit 4 is hig
                                                            h, loop back to ste
                                                            p 1 (wait for BUSY 



ARM Macro Assembler    Page 4 


                                                            bit to be low)
  138 0000000E         
  139 0000000E         
  140 0000000E         
  141 0000000E 4810            LDR              R0,=DC      ;3) Clear D/C=PA6 t
                                                            o zero
  142 00000010 6809            LDR              R1,[R1]
  143 00000012 F021 0140       BIC              R1,#DC_DATA
  144 00000016 6001            STR              R1,[R0]
  145 00000018         
  146 00000018         
  147 00000018         
  148 00000018 BC03            POP              {R0,R1}
  149 0000001A         
  150 0000001A         
  151 0000001A 4B0E            LDR              R3,=SSI0_DR_R ;4) Write the com
                                                            mand to SSI0_DR_R
  152 0000001C 6018            STR              R0,[R3]
  153 0000001E         
  154 0000001E         
  155 0000001E         
  156 0000001E         busy2
  157 0000001E         
  158 0000001E 490B            LDR              R1,=SSI0_SR_R ;5) Read SSI0_SR_
                                                            R and check bit 4, 
                                                            
  159 00000020 6808            LDR              R0,[R1]
  160 00000022 F000 0010       AND              R0,#SSI_SR_BSY
  161 00000026 2800            CMP              R0,#0
  162 00000028         
  163 00000028         
  164 00000028 D1F9            BNE              busy2       ;6) If bit 4 is hig
                                                            h, loop back to ste
                                                            p 5 (wait for BUSY 
                                                            bit to be low)
  165 0000002A         
  166 0000002A         
  167 0000002A 4770            BX               LR          ;   return
  168 0000002C         
  169 0000002C         
  170 0000002C         ; This is a helper function that sends an 8-bit data to 
                       the LCD.
  171 0000002C         ; Input: R0  8-bit data to transmit
  172 0000002C         ; Output: none
  173 0000002C         ; Assumes: SSI0 and port A have already been initialized
                        and enabled
  174 0000002C         
  175 0000002C         writedata
  176 0000002C         
  177 0000002C         ;; --UUU-- Code to write data to the LCD
  178 0000002C B403            PUSH             {R0,R1}
  179 0000002E         
  180 0000002E         
  181 0000002E         
  182 0000002E         full
  183 0000002E 4807            LDR              R0,=SSI0_SR_R ;1) Read SSI0_SR_
                                                            R and check bit 1, 
                                                            
  184 00000030 6801            LDR              R1,[R0]



ARM Macro Assembler    Page 5 


  185 00000032 F001 0102       AND              R1,#SSI_SR_TNF
  186 00000036         
  187 00000036         
  188 00000036 2900            CMP              R1,#0       ;2) If bit 1 is low
                                                             loop back to step 
                                                            1 (wait for TNF bit
                                                             to be high)
  189 00000038 D0F9            BEQ              full
  190 0000003A         
  191 0000003A         
  192 0000003A 4805            LDR              R0,=DC      ;3) Set D/C=PA6 to 
                                                            one
  193 0000003C 6801            LDR              R1,[R0]
  194 0000003E F041 0140       ORR              R1,#DC_DATA
  195 00000042 6001            STR              R1,[R0]
  196 00000044         
  197 00000044         
  198 00000044 BC03            POP              {R0,R1}
  199 00000046 4903            LDR              R1,=SSI0_DR_R ;4) Write the 8-b
                                                            it data to SSI0_DR_
                                                            R
  200 00000048 6008            STR              R0,[R1]
  201 0000004A         
  202 0000004A 4770            BX               LR          ;   return
  203 0000004C         
  204 0000004C         
  205 0000004C         
  206 0000004C         
  207 0000004C         
  208 0000004C         ;***************************************************
  209 0000004C         ; This is a library for the Adafruit 1.8" SPI display.
  210 0000004C         ; This library works with the Adafruit 1.8" TFT Breakout
                        w/SD card
  211 0000004C         ; ----> http://www.adafruit.com/products/358
  212 0000004C         ; as well as Adafruit raw 1.8" TFT display
  213 0000004C         ; ----> http://www.adafruit.com/products/618
  214 0000004C         ;
  215 0000004C         ; Check out the links above for our tutorials and wiring
                        diagrams
  216 0000004C         ; These displays use SPI to communicate, 4 or 5 pins are
                        required to
  217 0000004C         ; interface (RST is optional)
  218 0000004C         ; Adafruit invests time and resources providing this ope
                       n source code,
  219 0000004C         ; please support Adafruit and open-source hardware by pu
                       rchasing
  220 0000004C         ; products from Adafruit!
  221 0000004C         ;
  222 0000004C         ; Written by Limor Fried/Ladyada for Adafruit Industries
                       .
  223 0000004C         
  224 0000004C         ; MIT license, all text above must be included in any re
                       distribution
  225 0000004C         
  226 0000004C         ;****************************************************
  227 0000004C         
  228 0000004C         
  229 0000004C         
  230 0000004C                 ALIGN                        ; make sure the end



ARM Macro Assembler    Page 6 


                                                             of this section is
                                                             aligned
  231 0000004C         
  232 0000004C                 END                          ; end of file
              4000800C 
              40004100 
              40008008 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\lcd.d -o.\lcd.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS
\Include -IC:\Keil_v5\ARM\Inc\Luminary --predefine="__UVISION_VERSION SETA 522"
 --list=.\lcd.lst LCD.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 69 in file LCD.s
   Uses
      None
Comment: .text unused
busy 00000002

Symbol: busy
   Definitions
      At line 128 in file LCD.s
   Uses
      At line 137 in file LCD.s
Comment: busy used once
busy2 0000001E

Symbol: busy2
   Definitions
      At line 156 in file LCD.s
   Uses
      At line 164 in file LCD.s
Comment: busy2 used once
full 0000002E

Symbol: full
   Definitions
      At line 182 in file LCD.s
   Uses
      At line 189 in file LCD.s
Comment: full used once
writecommand 00000000

Symbol: writecommand
   Definitions
      At line 121 in file LCD.s
   Uses
      At line 63 in file LCD.s
Comment: writecommand used once
writedata 0000002C

Symbol: writedata
   Definitions
      At line 175 in file LCD.s
   Uses
      At line 65 in file LCD.s
Comment: writedata used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

DC 40004100

Symbol: DC
   Definitions
      At line 45 in file LCD.s
   Uses
      At line 141 in file LCD.s
      At line 192 in file LCD.s

DC_COMMAND 00000000

Symbol: DC_COMMAND
   Definitions
      At line 47 in file LCD.s
   Uses
      None
Comment: DC_COMMAND unused
DC_DATA 00000040

Symbol: DC_DATA
   Definitions
      At line 49 in file LCD.s
   Uses
      At line 143 in file LCD.s
      At line 194 in file LCD.s

SSI0_DR_R 40008008

Symbol: SSI0_DR_R
   Definitions
      At line 51 in file LCD.s
   Uses
      At line 151 in file LCD.s
      At line 199 in file LCD.s

SSI0_SR_R 4000800C

Symbol: SSI0_SR_R
   Definitions
      At line 53 in file LCD.s
   Uses
      At line 130 in file LCD.s
      At line 158 in file LCD.s
      At line 183 in file LCD.s

SSI_SR_BSY 00000010

Symbol: SSI_SR_BSY
   Definitions
      At line 57 in file LCD.s
   Uses
      At line 132 in file LCD.s
      At line 160 in file LCD.s

SSI_SR_RNE 00000004

Symbol: SSI_SR_RNE
   Definitions
      At line 55 in file LCD.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Uses
      None
Comment: SSI_SR_RNE unused
SSI_SR_TNF 00000002

Symbol: SSI_SR_TNF
   Definitions
      At line 59 in file LCD.s
   Uses
      At line 185 in file LCD.s
Comment: SSI_SR_TNF used once
8 symbols
347 symbols in table
